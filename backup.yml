---
# While being worked on, this is just a playbook,
# to be turned into a role once it works
- name: "Back up a Matrix server"
  #hosts: "{{ target if target is defined else 'matrix_servers' }}"
  hosts: matrix
  become: true

  vars:
    backup_dest: /var/tmp/backup
    backup_addtl_includes:
      - /matrix/synapse/config

  tasks:
    # the archive module can produce `gzip', `bzip2', `lzma' and `zip' compressed files or archives.
    # but only ensure packages needed to generate a tar.bz2 archive,
    # obviously, you need to adjust package list if adjusting format in archive task
    - name: ensure packages needed for backup are installed
      package:
        name:
          - tar
          - bzip2
        state: present

    - name: "ensure directory {{ backup_dest }} exists"
      file:
        path: "{{ backup_dest }}"
        state: directory
        owner: root
        group: root
        mode: 0700


    # we need a postgres dump.
    # do that manually for now as there is work on backup in progress upstream.
    # docker run --rm --log-driver=none --network=matrix --env-file=/matrix/postgres/env-postgres-psql postgres:13.0-alpine pg_dumpall -h matrix-postgres | gzip -c > /var/tmp/backup/postgres.sql.gz
    # c.f. maintenance-postgres.md
    # maybe better to recycle task upgrade_postgres.yml in the role matrix-postgres ?
    # watch https://github.com/spantaleev/matrix-docker-ansible-deploy/pull/516
    # once that is merged, use it's nice oneshot service to get a DB dump

    # we need to collect all the bits and bobs that are not in the postgres database.
    # see discussion in #matrix-docker-ansible-deploy:devture.com
    # on 2020-11-27 and following
    # re-check `[root@matrix ~]# find /matrix/ -name data -type d | grep -v '/postgres/data'`
    # every time a new set of docker containers are enabled
    #
    # not having any luck gettiung the find module itself to exclude /matrix/postgres/data
    - name: find all data directories
      find:
        paths: /matrix
        recurse: yes
        file_type: directory
        patterns: 'data'
      register: datadirs

    - name: from find I got the following
      debug:
        msg: "{{ datadirs.files | map(attribute='path') | list }}"

    - name: rejecting postgres/data gives me
      debug:
        msg: "{{ datadirs.files | rejectattr('path', 'contains' , 'postgres/data') | map(attribute='path') | list }}"

    - name: rejecting postgres/data and adding backup_addtl_includes gives me
      debug:
        msg: "{{ datadirs.files | rejectattr('path', 'contains' , 'postgres/data') | map(attribute='path') | list + backup_addtl_includes }}"

    - name: create data directories archive, being sure to NOT include postgres but DO include other bits
      archive:
        path: "{{ datadirs.files | rejectattr('path', 'contains' , 'postgres/data') | map(attribute='path') | list + backup_addtl_includes }}"
        format: bz2
        dest: "{{ backup_dest }}/datadirs.tar.bz2"
        unsafe_writes: no
        mode: 0600
        owner: root

    - name: create media store archive
      archive:
        path: 
          - /matrix/synapse/storage/media-store
        format: bz2
        dest: "{{ backup_dest }}/mediastore.tar.bz2"
        unsafe_writes: no
        mode: 0600
        owner: root

    # do ensure you have enough space in ./backup or adjust the dest
    - name: fetch backup archives
      fetch:
        dest: backup
        src: "{{ item }}"
        validate_checksum: yes
        fail_on_missing: yes
        flat: no
      loop:
        - "{{ backup_dest }}/datadirs.tar.bz2"
        - "{{ backup_dest }}/mediastore.tar.bz2"
        - "{{ backup_dest }}/postgres.sql.gz"
    
    # hmm, do I want to ensure {{ backup_dest }} is absent after fetching?